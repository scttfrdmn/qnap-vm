name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.21, 1.22, 1.23, 1.24]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: go mod download

    - name: Run quality checks
      run: |
        go fmt ./...
        go vet ./...

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v4
      with:
        version: latest
        args: --timeout=5m

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

  integration-test:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && contains(github.event.head_commit.message, '[integration]'))
    strategy:
      matrix:
        go-version: [1.24]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Install dependencies
      run: go mod download

    - name: Run integration tests
      env:
        NAS_HOST: ${{ secrets.QNAP_TEST_HOST }}
        NAS_USER: ${{ secrets.QNAP_TEST_USER }}
        NAS_SSH_KEY: ${{ secrets.QNAP_SSH_KEY_PATH }}
      run: |
        if [ -z "$NAS_HOST" ]; then
          echo "⚠️ Integration tests skipped - QNAP_TEST_HOST secret not configured"
          echo "To enable integration tests:"
          echo "1. Add QNAP_TEST_HOST secret with your QNAP device hostname"
          echo "2. Add QNAP_TEST_USER secret with SSH username (optional, defaults to 'admin')"
          echo "3. Add QNAP_SSH_KEY_PATH secret with SSH key path (optional)"
          exit 0
        fi
        make integration-test

    - name: Upload integration coverage
      if: env.NAS_HOST != ''
      uses: codecov/codecov-action@v4
      with:
        file: ./integration_coverage.out
        flags: integration
        name: codecov-integration

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.24

    - name: Build binaries
      run: |
        GOOS=linux GOARCH=amd64 go build -o bin/qnap-vm-linux-amd64 ./cmd/qnap-vm
        GOOS=linux GOARCH=arm64 go build -o bin/qnap-vm-linux-arm64 ./cmd/qnap-vm
        GOOS=darwin GOARCH=amd64 go build -o bin/qnap-vm-darwin-amd64 ./cmd/qnap-vm
        GOOS=darwin GOARCH=arm64 go build -o bin/qnap-vm-darwin-arm64 ./cmd/qnap-vm
        GOOS=windows GOARCH=amd64 go build -o bin/qnap-vm-windows-amd64.exe ./cmd/qnap-vm

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries
        path: bin/